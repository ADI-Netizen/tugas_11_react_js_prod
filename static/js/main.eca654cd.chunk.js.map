{"version":3,"sources":["component/Konten.js","component/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Konten","Segment","placeholder","style","marginTop","Grid","columns","stackable","textAlign","Divider","vertical","Row","verticalAlign","Column","Header","icon","Icon","name","Search","Button","primary","Dimmer","active","Loader","Image","src","Footer","width","raised","Placeholder","image","Line","Paragraph","length","List","Item","Content","href","target","rel","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eca654cd.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Dimmer, Divider, Grid, Header, Icon, Image, Loader, Search, Segment } from 'semantic-ui-react';\r\n\r\nfunction Konten() {\r\n    return (\r\n        <>\r\n            <Segment placeholder style={{ marginTop: '10px' }}>\r\n                <Grid columns={2} stackable textAlign='center'>\r\n                    <Divider vertical>Or</Divider>\r\n\r\n                    <Grid.Row verticalAlign='middle'>\r\n                        <Grid.Column>\r\n                            <Header icon>\r\n                                <Icon name='search' />\r\n                                Cari Dokumen\r\n                            </Header>\r\n                            <Search placeholder='Search Document...' />\r\n                        </Grid.Column>\r\n\r\n                        <Grid.Column>\r\n                            <Header icon>\r\n                                <Icon name='file pdf outline' />\r\n                                Tambah Dokumen Baru\r\n                            </Header>\r\n                            <Button primary>Create Document</Button>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment>\r\n                <Dimmer active>\r\n                    <Loader>Loading</Loader>\r\n                </Dimmer>\r\n\r\n                <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\r\n            </Segment>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Konten;","import React from 'react';\r\nimport { Grid, List, Placeholder, Segment } from 'semantic-ui-react';\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <>\r\n            <Grid style={{ marginTop: '10px' }}>\r\n                <Grid.Column width={5}>\r\n                    <Segment raised>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line length='medium' />\r\n                                <Placeholder.Line length='short' />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column width={8}>\r\n                    <Segment raised>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line length='medium' />\r\n                                <Placeholder.Line length='short' />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column width={3}>\r\n                    <h3>Website Terkait</h3>\r\n                    <List>\r\n                        <List.Item>\r\n                            <List.Icon name='linkify' />\r\n                            <List.Content>\r\n                                <a href='https://www.google.com/' target=\"_blank\" rel=\"noopener noreferrer\">Google</a>\r\n                            </List.Content>\r\n                        </List.Item>\r\n                        <List.Item>\r\n                            <List.Icon name='linkify' />\r\n                            <List.Content>\r\n                                <a href='https://www.facebook.com/' target=\"_blank\" rel=\"noopener noreferrer\">Facebook</a>\r\n                            </List.Content>\r\n                        </List.Item>\r\n                        <List.Item>\r\n                            <List.Icon name='linkify' />\r\n                            <List.Content>\r\n                                <a href='https://react.semantic-ui.com/' target=\"_blank\" rel=\"noopener noreferrer\">Semantic UI</a>\r\n                            </List.Content>\r\n                        </List.Item>\r\n                        <List.Item>\r\n                            <List.Icon name='linkify' />\r\n                            <List.Content>\r\n                                <a href='https://niomic.com/'>NIOMIC</a>\r\n                            </List.Content>\r\n                        </List.Item>\r\n                        <List.Item>\r\n                            <List.Icon name='linkify' />\r\n                            <List.Content>\r\n                                <a href='https://reactjs.org/' target=\"_blank\" rel=\"noopener noreferrer\">React</a>\r\n                            </List.Content>\r\n                        </List.Item>\r\n                    </List>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport Konten from './component/Konten';\nimport Footer from './component/Footer';\n\n\nfunction App() {\n  return (\n    <>\n      <Konten />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}